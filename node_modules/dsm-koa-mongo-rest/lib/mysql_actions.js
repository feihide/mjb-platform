
module.exports = function(db, model, memcache, cacheTable) {
  function err(_error) {
    return {
      code: 400,
      error: JSON.stringify(_error)
    };
  }

  function out(result) {
    return {
      code: 200,
      data: result
    };
  }

  return {
    findAll: function*(next) {
      yield next;
      var error,
        result;
      try {
        conditions = this.request.query.conditions ? this.request.query.conditions : 1
        sort = this.request.query.sort ? this.request.query.sort : 'id desc'
        //conditions = 'tt2=' + db.escape("fff")
        // console.log("select count(*) as num from dict where " + conditions + " and is_del=0 ")
        var result = yield db.query("select count(*) as num from dict where " + conditions + " and is_del=0 ");
        if (result[0]['num']) {
          var rows = yield db.query("select * from dict where " + conditions + " and is_del=0  order by " + sort + "  limit ?,? ", [parseInt(this.request.query.skip), parseInt(this.request.query.limit)]);
          return this.body = out({
            list: rows,
            num: result[0]['num']
          })

        } else {
          return this.body = out({
            list: [],
            'num': 0
          })
        }

      } catch (_error) {
        error = _error;
        return this.body = err(_error)
      }
    },
    findById: function*(next) {
      yield next;
      var error,
        result;
      try {
        var list = yield db.query("select * from " + model + "  where id=?  and is_del=?", [this.params.id, 0]);
        if (!list[0]) {
          list[0] = []
        }
        return this.body = out(list[0])
      } catch (_error) {
        error = _error;
        return this.body = err(_error)
      }
    },
    deleteById: function*(next) {
      yield next;
      var error,
        result;
      try {
        var result = yield db.query('update ' + model + ' set is_del=1 where id=?', [this.params.id])
        return this.body = out(result)
        //在配置缓存中
        if (cacheTable.indexOf(model) != -1) {
          yield memcache.destroy(model + '_' + this.params.id);
        }
      } catch (_error) {
        //屏蔽memcache 无cache时异常
        return this.body = out(result)
        error = _error;
        return this.body = err(_error)
      }



    },

    updateById: function*(next) {
      yield next;
      var error,
        result;
      try {
        delete (this.request.body.request_host)
        delete (this.request.body.device_type)
        delete (this.request.body.request_user)
        this.request.body.utime = new Date().getTime() / 1000
        var result = yield db.query('UPDATE ' + model + ' set ? where id =?', [this.request.body, this.params.id])
        //在配置缓存中
        if (cacheTable.indexOf(model) != -1) {
          yield memcache.destroy(model + '_' + this.params.id)
        }
        return this.body = out(result)
      } catch (_error) {
        //屏蔽memcache 无cache时异常
        return this.body = out(result)
        error = _error;
        return this.body = err(_error)
      }
    },
    create: function*(next) {
      yield next;
      var error,
        result;
      try {
        delete (this.request.body.request_host)
        delete (this.request.body.device_type)
        delete (this.request.body.request_user)
        this.request.body.ctime = this.request.body.utime = new Date().getTime() / 1000
        var result = yield db.query('INSERT INTO ' + model + ' set ?', this.request.body)
        this.status = 201;
        return this.body = out(result)
      } catch (_error) {
        error = _error;
        return this.body = err(_error)
      }
    }
  };
};
